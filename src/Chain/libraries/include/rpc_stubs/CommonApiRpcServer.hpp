//                                   _           _    __ _ _      
//                                  | |         | |  / _(_) |     
//    __ _  ___ _ __   ___ _ __ __ _| |_ ___  __| | | |_ _| | ___ 
//   / _` |/ _ \ '_ \ / _ \ '__/ _` | __/ _ \/ _` | |  _| | |/ _ \`
//  | (_| |  __/ | | |  __/ | | (_| | ||  __/ (_| | | | | | |  __/
//   \__, |\___|_| |_|\___|_|  \__,_|\__\___|\__,_| |_| |_|_|\___|
//    __/ |                                                       
//   |___/                                                        
//
//
// Warning: this is a generated file, any changes made here will be
//          overwritten by the build process.  If you need to change what is
//          generated here, you should either modify the input json files
//          (network_api.json, wallet_api.json, etc) or modify the code
//          generator (thinkyoung_api_generator.cpp) itself
//
#pragma once
#include <api/ApiMetadata.hpp>
#include <api/CommonApi.hpp>
#include <fc/rpc/json_connection.hpp>

namespace thinkyoung {
    namespace rpc_stubs {
        class CommonApiRpcServer
        {
        public:
            virtual thinkyoung::api::CommonApi* get_client() const = 0;
            virtual void verify_json_connection_is_authenticated(fc::rpc::json_connection* json_connection) const = 0;
            virtual void verify_wallet_is_open() const = 0;
            virtual void verify_wallet_is_unlocked() const = 0;
            virtual void verify_sandbox_is_open() const = 0;
            virtual void verify_connected_to_network() const = 0;

            virtual void store_method_metadata(const thinkyoung::api::MethodData& method_metadata) = 0;
            fc::variant direct_invoke_positional_method(const std::string& method_name, const fc::variants& parameters);
            void register_common_api_methods(const fc::rpc::json_connection_ptr& json_connection);

            void register_common_api_method_metadata();

            fc::variant blockchain_get_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_generate_snapshot_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_generate_snapshot_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_alp_account_balance_entry_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_alp_account_balance_entry_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_generate_issuance_map_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_generate_issuance_map_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_calculate_supply_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_calculate_supply_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_is_synced_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_is_synced_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_block_count_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_block_count_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_security_state_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_security_state_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_recently_updated_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_recently_updated_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_recently_registered_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_recently_registered_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_assets_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_assets_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_pending_transactions_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_pending_transactions_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_pretty_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_pretty_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_pretty_contract_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_pretty_contract_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_contract_result_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_contract_result_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_block_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_block_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_block_transactions_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_block_transactions_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_account_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_account_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_slate_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_slate_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_address_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_address_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_address_transactions_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_address_transactions_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_account_public_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_account_public_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_key_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_key_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_asset_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_asset_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_active_delegates_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_active_delegates_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_delegates_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_delegates_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_blocks_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_blocks_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_missing_block_delegates_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_missing_block_delegates_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_export_fork_graph_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_export_fork_graph_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_forks_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_forks_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_delegate_slot_entrys_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_delegate_slot_entrys_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_block_signee_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_block_signee_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_unclaimed_genesis_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_unclaimed_genesis_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_verify_signature_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_verify_signature_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_dump_state_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_dump_state_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_broadcast_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_broadcast_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_btc_address_convert_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_btc_address_convert_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_transaction_rpc_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_transaction_rpc_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_set_node_vm_enabled_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_set_node_vm_enabled_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_node_vm_enabled_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_node_vm_enabled_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_all_contracts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_all_contracts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_forever_contracts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_forever_contracts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_list_pub_all_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_list_pub_all_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant blockchain_get_events_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant blockchain_get_events_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_add_node_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_add_node_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_get_connection_count_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_get_connection_count_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_get_peer_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_get_peer_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_broadcast_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_broadcast_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_set_advanced_node_parameters_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_set_advanced_node_parameters_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_get_advanced_node_parameters_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_get_advanced_node_parameters_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_get_transaction_propagation_data_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_get_transaction_propagation_data_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_get_block_propagation_data_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_get_block_propagation_data_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_get_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_get_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_list_potential_peers_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_list_potential_peers_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_get_upnp_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_get_upnp_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant network_get_blocked_ips_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant network_get_blocked_ips_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant debug_get_client_name_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant debug_get_client_name_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_get_config_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_get_config_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_set_network_min_connection_count_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_set_network_min_connection_count_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_set_block_max_transaction_count_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_set_block_max_transaction_count_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_set_soft_max_imessage_length_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_set_soft_max_imessage_length_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_set_imessage_fee_coe_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_set_imessage_fee_coe_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_set_block_max_size_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_set_block_max_size_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_set_transaction_max_size_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_set_transaction_max_size_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_set_transaction_canonical_signatures_required_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_set_transaction_canonical_signatures_required_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_set_transaction_min_fee_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_set_transaction_min_fee_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_blacklist_add_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_blacklist_add_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_blacklist_remove_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_blacklist_remove_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_blacklist_add_operation_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_blacklist_add_operation_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delegate_blacklist_remove_operation_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delegate_blacklist_remove_operation_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_open_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_open_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_name_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_name_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_import_private_key_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_import_private_key_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_close_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_close_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_backup_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_backup_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_backup_restore_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_backup_restore_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_set_automatic_backups_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_set_automatic_backups_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_set_transaction_expiration_time_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_set_transaction_expiration_time_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_transaction_history_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_transaction_history_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_transaction_history_splite_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_transaction_history_splite_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_historic_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_historic_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_remove_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_remove_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_pending_transaction_errors_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_pending_transaction_errors_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_lock_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_lock_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_unlock_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_unlock_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_change_passphrase_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_change_passphrase_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_check_passphrase_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_check_passphrase_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_check_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_check_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_list_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_list_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_set_approval_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_set_approval_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_all_approved_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_all_approved_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_address_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_address_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_transfer_to_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_transfer_to_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_transfer_to_public_account_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_transfer_to_public_account_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_withdraw_from_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_withdraw_from_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_rescan_blockchain_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_rescan_blockchain_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_cancel_scan_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_cancel_scan_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_scan_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_scan_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_rebroadcast_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_rebroadcast_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_register_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_register_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_update_private_data_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_update_private_data_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_update_registration_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_update_registration_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_update_active_key_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_update_active_key_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_list_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_list_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_list_unregistered_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_list_unregistered_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_list_my_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_list_my_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_list_my_addresses_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_list_my_addresses_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_account_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_account_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_account_public_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_account_public_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_remove_contact_account_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_remove_contact_account_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_rename_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_rename_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_asset_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_asset_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_asset_issue_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_asset_issue_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_asset_issue_to_addresses_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_asset_issue_to_addresses_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_balance_ids_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_balance_ids_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_list_public_keys_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_list_public_keys_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_delegate_withdraw_pay_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_delegate_withdraw_pay_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_delegate_pay_balance_query_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_delegate_pay_balance_query_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_active_delegate_salary_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_active_delegate_salary_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_delegate_statue_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_delegate_statue_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_set_transaction_imessage_fee_coe_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_set_transaction_imessage_fee_coe_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_transaction_imessage_fee_coe_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_transaction_imessage_fee_coe_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_set_transaction_imessage_soft_max_length_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_set_transaction_imessage_soft_max_length_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_transaction_imessage_soft_max_length_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_transaction_imessage_soft_max_length_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_set_transaction_fee_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_set_transaction_fee_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_transaction_fee_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_transaction_fee_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_dump_private_key_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_dump_private_key_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_dump_account_private_key_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_dump_account_private_key_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_vote_summary_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_vote_summary_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_check_vote_status_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_check_vote_status_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_set_setting_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_set_setting_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_setting_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_setting_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_delegate_set_block_production_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_delegate_set_block_production_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_set_transaction_scanning_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_set_transaction_scanning_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_sign_hash_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_sign_hash_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_login_start_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_login_start_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_login_finish_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_login_finish_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_balance_set_vote_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_balance_set_vote_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_publish_slate_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_publish_slate_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_publish_version_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_publish_version_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_collect_genesis_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_collect_genesis_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_recover_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_recover_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_verify_titan_deposit_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_verify_titan_deposit_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_repair_entrys_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_repair_entrys_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_regenerate_keys_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_regenerate_keys_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_retract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_retract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_delete_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_delete_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_transfer_to_address_rpc_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_transfer_to_address_rpc_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_account_balance_rpc_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_account_balance_rpc_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_transfer_to_public_account_rpc_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_transfer_to_public_account_rpc_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_account_owner_publickey_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_account_owner_publickey_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_transfer_to_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_transfer_to_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_transfer_to_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_transfer_to_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_get_contracts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_get_contracts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant wallet_scan_contracts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant wallet_scan_contracts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant about_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant about_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant stop_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant stop_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant help_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant help_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant validate_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant validate_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant execute_command_line_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant execute_command_line_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant execute_script_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant execute_script_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant batch_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant batch_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant batch_authenticated_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant batch_authenticated_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant builder_finalize_and_sign_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant builder_finalize_and_sign_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant meta_help_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant meta_help_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant rpc_set_username_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant rpc_set_username_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant rpc_set_password_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant rpc_set_password_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant rpc_start_server_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant rpc_start_server_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant http_start_server_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant http_start_server_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant ntp_update_time_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant ntp_update_time_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant disk_usage_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant disk_usage_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant compile_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant compile_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant register_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant register_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant register_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant register_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant upgrade_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant upgrade_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant upgrade_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant upgrade_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant destroy_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant destroy_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant destroy_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant destroy_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant call_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant call_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_contract_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_contract_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_contract_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_contract_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant call_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant call_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant call_contract_offline_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant call_contract_offline_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant load_contract_to_file_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant load_contract_to_file_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_result_trx_id_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_result_trx_id_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_request_trx_id_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_request_trx_id_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_open_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_open_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_close_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_close_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_register_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_register_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_call_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_call_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_upgrade_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_upgrade_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_upgrade_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_upgrade_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_destroy_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_destroy_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_destroy_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_destroy_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_get_contract_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_get_contract_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_get_contract_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_get_contract_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_transfer_to_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_transfer_to_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_account_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_account_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_compile_contract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_compile_contract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_load_contract_to_file_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_load_contract_to_file_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_register_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_register_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_call_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_call_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_transfer_to_contract_testing_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_transfer_to_contract_testing_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant sandbox_list_my_addresses_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant sandbox_list_my_addresses_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_contract_registered_in_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_contract_registered_in_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_transaction_id_contract_registered_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_transaction_id_contract_registered_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_contract_info_from_gpc_file_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_contract_info_from_gpc_file_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant compile_script_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant compile_script_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant add_script_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant add_script_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant remove_script_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant remove_script_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_script_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_script_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant list_scripts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant list_scripts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant disable_script_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant disable_script_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant enable_script_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant enable_script_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant import_script_db_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant import_script_db_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant export_script_db_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant export_script_db_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant get_events_bound_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant get_events_bound_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant list_event_handler_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant list_event_handler_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant add_event_handler_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant add_event_handler_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
            fc::variant delete_event_handler_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
            fc::variant delete_event_handler_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
        };

    }
} // end namespace thinkyoung::rpc_stubs
